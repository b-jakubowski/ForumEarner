{"version":3,"sources":["data/data.csv","components/PieChart.jsx","hooks/useParseCsvToChartData.js","components/BarChart.jsx","containers/Layout.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","PieChart","data","theme","sortByValue","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","colors","scheme","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","Papa","require","csvFilePath","setKeyValMap","obj","key","objCopy","mapToPieChartData","val","chartVals","Object","keys","forEach","v","push","id","label","value","filter","sort","a","b","setPieChartData","hashMap","map","d","useParseCsvToChartData","useState","loading","setLoading","age","setAge","cities","setCities","contract","setContract","stack","setStack","experience","setExperience","useEffect","parse","header","download","skipEmptyLines","complete","res","setAgeRange","exp","setExpRange","BarChart","indexBy","enableGridX","colorBy","padding","layout","labelSkipWidth","labelSkipHeight","labelTextColor","useStyles","makeStyles","root","flexGrow","paper","spacing","textAlign","color","palette","text","secondary","chartTitle","Layout","classes","className","Grid","container","item","xs","sm","md","Paper","style","height","marginTop","App","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c12b585d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/data.b24e7d4e.csv\";","import { ResponsivePie } from '@nivo/pie';\nimport React from 'react';\n\nconst PieChart = ({ data, theme }) => (\n  <ResponsivePie\n    data={data}\n    sortByValue={true}\n    margin={{\n      top: 30,\n      right: 80,\n      bottom: 50,\n      left: 80\n    }}\n    innerRadius={0.4}\n    padAngle={0.7}\n    cornerRadius={3}\n    colors={{\n      scheme: theme\n    }}\n    borderWidth={1}\n    borderColor={{\n      from: \"color\",\n      modifiers: [[\"darker\", 0.2]]\n    }}\n    radialLabelsSkipAngle={10}\n    radialLabelsTextXOffset={4}\n    radialLabelsTextColor=\"#333333\"\n    radialLabelsLinkOffset={0}\n    radialLabelsLinkDiagonalLength={16}\n    radialLabelsLinkHorizontalLength={24}\n    radialLabelsLinkStrokeWidth={1}\n    radialLabelsLinkColor={{\n      from: \"color\"\n    }}\n    slicesLabelsSkipAngle={10}\n    slicesLabelsTextColor=\"#333333\"\n    animate={true}\n    motionStiffness={90}\n    motionDamping={15}\n  />\n);\n\nexport default PieChart;\n","import { useEffect, useState } from 'react';\n\nconst Papa = require('papaparse/papaparse.min');\nconst csvFilePath = require('../data/data.csv');\n\nconst setKeyValMap = (obj, key) => {\n  const objCopy = obj;\n  !objCopy[key] ? objCopy[key] = 1 : objCopy[key]++;\n\n  return objCopy;\n};\n\nconst mapToPieChartData = (val) => {\n  const chartVals = [];\n\n  Object.keys(val).forEach((v) => chartVals.push(\n    {\n      id: v,\n      label: v,\n      value: val[v],\n    },\n  ));\n\n  return chartVals\n    .filter((val) => val.value >= 5)\n    .sort((a, b) => ((a.value > b.value) ? 1 : -1));\n};\n\nconst setExpRange = ({ data }) => {\n  const exp = {};\n\n  data.forEach((d) => {\n    const key = d.exp < 1 ? '0-1' : d.exp;\n    setKeyValMap(exp, key);\n  });\n\n  return mapToPieChartData(exp);\n};\n\nconst setAgeRange = ({ data }) => {\n  const age = {};\n\n  data.forEach((d) => {\n    switch (true) {\n      case d.age <= 20:\n        setKeyValMap(age, '<=20');\n        break;\n      case d.age >= 21 && d.age <= 25:\n        setKeyValMap(age, '21-25');\n        break;\n      case d.age >= 26 && d.age <= 30:\n        setKeyValMap(age, '26-30');\n        break;\n      case d.age >= 31 && d.age <= 35:\n        setKeyValMap(age, '31-35');\n        break;\n      case d.age >= 36 && d.age <= 40:\n        setKeyValMap(age, '36-40');\n        break;\n      case d.age >= 41 && d.age <= 45:\n        setKeyValMap(age, '41-45');\n        break;\n      default:\n        setKeyValMap(age, '>46');\n        break;\n    }\n  });\n\n  return mapToPieChartData(age);\n};\n\nconst setPieChartData = ({ data }, key) => {\n  const hashMap = {};\n\n  data.map((d) => setKeyValMap(hashMap, d[key]));\n\n  return mapToPieChartData(hashMap);\n};\n\nconst useParseCsvToChartData = () => {\n  const [loading, setLoading] = useState(false);\n  const [age, setAge] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [contract, setContract] = useState([]);\n  const [stack, setStack] = useState([]);\n  const [experience, setExperience] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    Papa.parse(csvFilePath, {\n      header: true,\n      download: true,\n      skipEmptyLines: true,\n      complete: (res) => {\n        setAge(setAgeRange(res));\n        setExperience(setExpRange(res));\n        setCities(setPieChartData(res, 'location'));\n        setContract(setPieChartData(res, 'contract_type'));\n        setStack(setPieChartData(res, 'stack'));\n        setLoading(false);\n      },\n    });\n  }, []);\n\n  return [loading, age, cities, contract, stack, experience];\n};\n\nexport default useParseCsvToChartData;\n","import { ResponsiveBar } from '@nivo/bar';\nimport React from 'react';\n\nconst BarChart = ({ data, theme }) => (\n  <ResponsiveBar\n    data={data}\n    keys={[ 'value' ]}\n    indexBy=\"id\"\n    enableGridX={true}\n    colorBy=\"index\"\n    margin={{ top: 30, right: 80, bottom: 50, left: 100 }}\n    padding={0.3}\n    layout=\"horizontal\"\n    colors={{ scheme: theme }}\n    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n    labelSkipWidth={12}\n    labelSkipHeight={12}\n    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\n    animate={true}\n    motionStiffness={90}\n    motionDamping={15}\n  />\n);\n\nexport default BarChart;\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport PieChart from \"../components/PieChart\";\nimport useParseCsvToChartData from \"../hooks/useParseCsvToChartData\";\nimport BarChart from \"../components/BarChart\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  chartTitle: {\n    margin: 0,\n  }\n}));\n\nconst Layout = () => {\n  const classes = useStyles();\n  const [ loading, age, cities, contract, stack, experience ] = useParseCsvToChartData();\n\n  return (\n    <div className={classes.root}>\n      { loading\n        ? (\n            <p>Loading...</p>\n          )\n        : (\n          <Grid container spacing={3}>\n            <Grid item xs={12} sm={12} md={6}>\n              <Paper className={classes.paper} style={{ height: 450 }}>\n                <h3 className={classes.chartTitle}>Users age</h3>\n                <PieChart\n                  data={age}\n                  theme=\"greens\"\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6}>\n              <Paper className={classes.paper} style={{ height: 450 }}>\n                <h3 className={classes.chartTitle}>Contract type</h3>\n                <PieChart\n                  data={contract}\n                  theme=\"oranges\"\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={12}>\n              <Paper className={classes.paper} style={{ height: 600 }}>\n                <h3 className={classes.chartTitle}>Cities</h3>\n                <BarChart\n                  data={cities}\n                  theme=\"spectral\"\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6}>\n              <Paper className={classes.paper} style={{ height: 450 }}>\n                <h3 className={classes.chartTitle}>Stack</h3>\n                <PieChart\n                  data={stack}\n                  theme=\"pastel1\"\n                />\n              </Paper>\n            </Grid>\n            <Grid item xs={12} sm={12} md={6}>\n              <Paper className={classes.paper} style={{ height: 450 }}>\n                <h3 className={classes.chartTitle}>Experience (years)</h3>\n                <PieChart\n                  data={experience}\n                  theme=\"pastel2\"\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        )\n      }\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Container } from \"@material-ui/core\";\nimport Layout from \"./containers/Layout\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    marginTop: '5rem',\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Container maxWidth=\"lg\" className={classes.container}>\n      <Layout />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      const registry = registration;\n      registry.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else if (config && config.onSuccess) {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n\n              // Execute callback\n              config.onSuccess(registration);\n            }\n          }\n        };\n      };\n    })\n    .catch();\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch();\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then().catch();\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}